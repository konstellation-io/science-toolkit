trivy-runner-image:
  stage: test
  image: docker:stable
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    IMAGE_PROJECT_NAME: "terminus7/runner-image"
    PROJECT_PATH: "runner-image"
    CONTAINER_SCANNING_REPORT: gl-container-scanning-report-runner-image.json
  before_script:
    - apk add curl rpm --no-cache --update
    - export VERSION=$(curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $VERSION
    - wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz
    - tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz
    - cp ./trivy /usr/local/bin/
  allow_failure: true
  script:
    # Build image
    - docker build -t $IMAGE_PROJECT_NAME:test ./$PROJECT_PATH
    # Build report
    - trivy --exit-code 0 --cache-dir .trivycache/ --no-progress --format template --template "@contrib/gitlab.tpl" -o $CONTAINER_SCANNING_REPORT $IMAGE_PROJECT_NAME:test
    # Print report
    - trivy --exit-code 0 --cache-dir .trivycache/ --no-progress --severity HIGH $IMAGE_PROJECT_NAME:test
    # Fail on high and critical vulnerabilities
    - trivy --exit-code 0 --cache-dir .trivycache/ --severity CRITICAL --no-progress $IMAGE_PROJECT_NAME:test
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report-runner-image.json
  only:
    refs:
      - master
    changes:
      - runner-image/**/*
  cache:
    paths:
      - .trivycache/
  when: manual

release-runner-image:
  stage: semantic-release
  image: node:10
  before_script:
    - npm install --prefix runner-image
  script:
    - cd runner-image && npx semantic-release -e semantic-release-monorepo
  only:
    changes:
      - runner-image/**/*
    refs:
      - master

publish_docker_image_runner:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  variables:
    IMAGE_PROJECT_NAME: "terminus7/sci-toolkit-runner"
    README_FILEPATH: "./runner-image/README.md"
  before_script:
    - apk add curl jq bash git coreutils --update
    - TAG=${CI_COMMIT_TAG#"runner-image-v"}
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
  script:
    - docker build -t $IMAGE_PROJECT_NAME:$TAG ./runner-image
    - docker tag $IMAGE_PROJECT_NAME:$TAG $IMAGE_PROJECT_NAME:latest
    - docker push $IMAGE_PROJECT_NAME:$TAG
    - docker push $IMAGE_PROJECT_NAME:latest
  after_script:
    - "export TOKEN=$(curl -H \"Content-Type: application/json\" -X POST -d \"{\"username\": ${DOCKER_USER}, \"password\": ${DOCKER_PASS}}\" https://hub.docker.com/v2/users/login/ | jq -r .token)"
    - "curl -H \"Authorization: JWT ${TOKEN}\" -X PATCH --data-urlencode full_description@${README_FILEPATH} https://hub.docker.com/v2/repositories/${REPOSITORY_PATH}/"
  only:
    - /^runner-image-v\d*.\d*.\d*$/
