apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: drone
  labels:
    app:  drone
spec:
  serviceName: "drone"
  replicas: 1
  template:
    metadata:
      labels:
        app: drone
      annotations:
        helm.sh/restart-deployment: {{ randAlphaNum 5 | quote }}
    spec:
      initContainers:
        - name: gitea-oauth2-setup
          image: "terminus7/gitea-oauth2-setup:{{ .Values.giteaOauth2Setup.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: gitea-admin-secrets
            - secretRef:
                name: drone-oauth2-secrets
            - configMapRef:
                name: gitea-configmap
      containers:
        - name: drone
          image: {{ .Values.drone.image.repository }}:{{ .Values.drone.image.tag }}
          imagePullPolicy: {{ .Values.drone.image.pullPolicy }}
          env:
            - name: DRONE_GITEA_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: drone-oauth2-secrets
                  key: DRONE_OAUTH2_CLIENT_ID
            - name: DRONE_GITEA_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: drone-oauth2-secrets
                  key: DRONE_OAUTH2_CLIENT_SECRET
          envFrom:
            - configMapRef:
                name: drone-config
            - secretRef:
                name: drone-oauth2-secrets
          volumeMounts:
            - name: drone-pvc
              mountPath: /data
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 60
  volumeClaimTemplates:
    - metadata:
        name: drone-pvc
        labels:
          app: drone
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.drone.storage.storageClassName }}
        resources:
          requests:
            storage:  {{ .Values.drone.storage.size }}
