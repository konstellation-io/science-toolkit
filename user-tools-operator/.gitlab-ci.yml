trivy-user-tools-operator:
  stage: test
  image: docker:stable
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    IMAGE_PROJECT_NAME: "terminus7/sci-toolkit-user-tools-operator" 
  before_script:
    - apk add --no-cache curl
    - export VERSION=$(curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $VERSION
    - wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz
    - tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz
    - cd user-tools-operator
    - ./scripts/install_operator_sdk.sh
  allow_failure: true
  script:
    # Build image
    - operator-sdk build $IMAGE_PROJECT_NAME:test
    # Build report
    - ./trivy --exit-code 0 --cache-dir .trivycache/ --no-progress --format template --template "@contrib/gitlab.tpl" -o gl-container-scanning-report.json $IMAGE_PROJECT_NAME:test
    # Print report
    - ./trivy --exit-code 0 --cache-dir .trivycache/ --no-progress --severity HIGH $IMAGE_PROJECT_NAME:test
    # Fail on high and critical vulnerabilities
    - ./trivy --exit-code 0 --cache-dir .trivycache/ --severity CRITICAL --no-progress $IMAGE_PROJECT_NAME:test
  cache:
    paths:
      - .trivycache/
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report-user-tools-operator.json
  only:
    refs:
      - master
    changes:
      - user-tools-operator/**/*

release-user-tools-operator:
  stage: semantic-release
  image: node:10
  before_script:
    - npm install --prefix user-tools-operator
  script:
    - cd user-tools-operator && npx semantic-release -e semantic-release-monorepo
  only:
    refs:
      - master
    changes:
      - user-tools-operator/**/*
      - .gitlab-ci.yml

publish-user-tools-operator-image:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  variables:
    SDK_RELEASE_VERSION: v0.15.1
    HELM_VERSION: v3.1.1
    IMAGE_PROJECT_NAME: "terminus7/sci-toolkit-user-tools-operator"
    DOCKER_USER: $DOCKER_USER
    DOCKER_PASS: $DOCKER_PASS
    README_FILEPATH: "./user-tools-operator/README.md"
    TAGS_VERSION: 1.0.0
    COMPONENT_TAGS_PROJECT_ID: "intelygenz/science-toolkit"
  before_script:
    - apk add curl jq bash gettext git coreutils --update
    - wget -q https://github.com/guumaster/monorepo-components-tags/releases/download/v${TAGS_VERSION}/monorepo-components-tags_${TAGS_VERSION}_linux_64-bit.tar.gz -O - | tar -xzO  monorepo-components-tags >  /usr/local/bin/monorepo-components-tags
    - chmod +x /usr/local/bin/monorepo-components-tags
    - /usr/local/bin/monorepo-components-tags --project $COMPONENT_TAGS_PROJECT_ID --commit $CI_COMMIT_SHA --export-shell --suffix TAG --provider GITHUB | tee -a /tmp/components_tags.sh
    - source /tmp/components_tags.sh
    - ./scripts/replace_env_path.sh
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - cd user-tools-operator
    - ./scripts/install_operator_sdk.sh
    - wget -q https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm
    - chmod +x /usr/local/bin/helm
    - helm repo add stable https://kubernetes-charts.storage.googleapis.com
    - helm dependency update helm-charts/usertools
  script:
    - TAG=${CI_COMMIT_TAG#user-tools-operator-v}
    - operator-sdk build $IMAGE_PROJECT_NAME:$TAG
    - docker tag $IMAGE_PROJECT_NAME:$TAG $IMAGE_PROJECT_NAME:latest
    - docker push $IMAGE_PROJECT_NAME:$TAG
    - docker push $IMAGE_PROJECT_NAME:latest
    - cd ..
    - ./scripts/update-dockerhub-readme.sh
  after_script:
    - docker rmi $IMAGE_PROJECT_NAME:$TAG
  only:
    refs:
      - /^user-tools-operator-v\d*.\d*.\d*$/
